@model LetsStayConsistent.ViewModels.LogsEditViewModel

<div class="mt-3">
    <h2>Edit Log</h2>
    <hr />

    @using (Html.BeginForm("Edit", "Logs", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        @Html.ValidationSummary(true, "There is an error in the form", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.GoalLog.Id)

        <div class="form-group">
            @Html.LabelFor(m => m.GoalLog.Goal, new { @class = "col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.GoalLog.GoalId, Model.Goals, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.GoalLog.Date, new { @class = "col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.GoalLog.Date, new { @class = "form-control" })
            </div>
        </div>

        <div class="col-md-12">
            <div class="form-check">
                @Html.CheckBoxFor(m => m.GoalLog.WasCompleted, new { @class = "form-check-input" })
                @Html.LabelFor(m => m.GoalLog.WasCompleted, new { @class = "form-check-label" })
            </div>
        </div>

        <div class="form-group mt-3">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-dark btn-lg" />
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index", "Logs", new { @class = "col-md-offset-2 col-md-10" })
    </div>
</div>
